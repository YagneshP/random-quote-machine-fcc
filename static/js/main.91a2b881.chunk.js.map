{"version":3,"sources":["component/QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","useState","quote","setQoute","useEffect","axios","get","then","res","data","Row","xs","Col","Card","id","Body","className","Text","content","author","style","display","justifyContent","width","Button","as","href","data-text","target","alt","onClick","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAsCeA,EAlCE,WAAO,IAAD,EACGC,qBADH,mBACjBC,EADiB,KACTC,EADS,KAEvBC,qBAAU,WACTC,IAAMC,IAAI,kCACTC,MAAK,SAAAC,GACLL,EAASK,EAAIC,WAEZ,IAOF,OACC,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACC,cAACC,EAAA,EAAD,UACD,cAACC,EAAA,EAAD,CAAMC,GAAG,YAAT,SACC,eAACD,EAAA,EAAKE,KAAN,CAAWC,UAAU,gEAArB,UACA,cAACH,EAAA,EAAKI,KAAN,CAAWH,GAAG,OAAOE,UAAW,QAAhC,SAA0Cd,EAAOA,EAAMgB,QAAQ,OAE/D,cAACL,EAAA,EAAKI,KAAN,CAAWH,GAAG,SAASE,UAAU,WAAjC,SAA8Cd,EAAMA,EAAMiB,OAAO,OACjE,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAe,eAAgBC,MAAM,QAAlE,UACA,cAACC,EAAA,EAAD,CAAQC,GAAG,IAAIC,KAAMxB,EAAM,yCAAD,OAA0CA,EAAMgB,QAAhD,aAA4DhB,EAAMiB,QAAW,KAAMQ,YAAWzB,EAAOA,EAAMgB,QAAU,KAAOU,OAAO,SAAUC,IAAI,UAAUf,GAAG,cAAxL,qBACC,cAACU,EAAA,EAAD,CAAQV,GAAG,YAAYgB,QAhBR,WAClBzB,IAAMC,IAAI,kCACTC,MAAK,SAAAC,GACLL,EAASK,EAAIC,UAaX,oCChBWsB,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAWhB,UAAU,MAArB,SACD,cAAC,EAAD,OCKYiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91a2b881.chunk.js","sourcesContent":["\r\nimport { Button, Card, Row, Col } from 'react-bootstrap'\r\nimport React,{useEffect, useState} from 'react'\r\nimport axios from \"axios\"\r\nconst QuoteBox = () => {\r\nconst[quote , setQoute] = useState()\r\nuseEffect(() => {\r\n\taxios.get(\"https://api.quotable.io/random\")\r\n\t.then(res=>{\r\n\t\tsetQoute(res.data)\r\n\t})\r\n}, [])\r\nconst handleClick= () => {\r\n\taxios.get(\"https://api.quotable.io/random\")\r\n\t.then(res=>{\r\n\t\tsetQoute(res.data)\r\n\t})\r\n}\r\n\treturn (\r\n\t\t<Row xs={1}>\r\n\t\t\t<Col>\r\n\t\t<Card id=\"qoute-box\"  >\r\n\t\t\t<Card.Body className=\" d-flex justify-content-center align-items-center flex-column\">\r\n\t\t\t<Card.Text id=\"text\" className={\"quote\"}>{quote? quote.content:null}\r\n\t\t\t</Card.Text>\r\n\t\t\t<Card.Text id=\"author\" className=\"__author\" >{quote?quote.author:null}</Card.Text>\r\n\t\t\t<div style={{display:\"flex\", justifyContent:\"space-evenly\", width:\"100%\"}}>\r\n\t\t\t<Button as=\"a\" href={quote?`https://twitter.com/intent/tweet?text=${quote.content} ~${quote.author}` : null} data-text={quote? quote.content : null } target=\"_blank\"  alt=\"twitter\" id=\"tweet-quote\">twitter</Button>\r\n\t\t\t <Button id=\"new-quote\" onClick={handleClick}>New Quote</Button>\r\n\t\t\t</div>\r\n\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default QuoteBox\r\n","import { Container } from \"react-bootstrap\";\nimport QuoteBox from \"./component/QuoteBox\";\n\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n\t\t\t<QuoteBox/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}